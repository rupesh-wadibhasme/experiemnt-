import os
import unittest
from backend.chatbot import TextExtractorDOCX  # Adjust import path if needed
from backend.file_object import FileObject     # Assuming FileObject is defined like in other extractors


class TestTextExtractorDOCX(unittest.TestCase):
    def setUp(self):
        self.sample_file_path = "sample.docx"
        self.extractor = TextExtractorDOCX()
        if not os.path.exists(self.sample_file_path):
            self.skipTest("sample.docx not found in the project root. Please add a test document.")
        self.file_obj = FileObject(self.sample_file_path)

    def test_supports_docx_file(self):
        self.assertTrue(self.extractor.supports("document.docx"))
        self.assertFalse(self.extractor.supports("document.pdf"))
        self.assertFalse(self.extractor.supports("document.yaml"))

    def test_extract_returns_single_chunk(self):
        chunks = self.extractor.extract(self.file_obj)
        self.assertIsInstance(chunks, list)
        self.assertEqual(len(chunks), 1)
        self.assertIsInstance(chunks[0], str)
        self.assertGreater(len(chunks[0]), 0)

    def test_extract_contains_heading_markdown(self):
        chunks = self.extractor.extract(self.file_obj)
        content = chunks[0]
        self.assertIn("#", content, "Expected markdown-style headings (e.g., '# Heading') in output")

