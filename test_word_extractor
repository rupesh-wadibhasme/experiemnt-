import os
import unittest
from chatbot import Chat  # ✅ Import the existing class from your updated chatbot.py

class TestChatFromDocx(unittest.TestCase):
    def setUp(self):
        self.sample_file = "sample.docx"
        self.chat = Chat()  # ✅ Create instance of the existing class

        if not os.path.exists(self.sample_file):
            self.skipTest("sample.docx not found. Please add a test document.")

    def tearDown(self):
        output_file = "python_docx_output.md"
        if os.path.exists(output_file):
            os.remove(output_file)

    def test_returns_markdown_string(self):
        output = self.chat.from_python_docx(self.sample_file, save_markdown=False)
        self.assertIsInstance(output, str)
        self.assertGreater(len(output), 0, "Extracted content should not be empty.")

    def test_heading_structure_exists(self):
        output = self.chat.from_python_docx(self.sample_file, save_markdown=False)
        self.assertIn("#", output, "Output should contain Markdown-style headings.")

    def test_save_markdown_file(self):
        output = self.chat.from_python_docx(self.sample_file, save_markdown=True)
        self.assertTrue(os.path.exists("python_docx_output.md"))
        with open("python_docx_output.md", "r", encoding="utf-8") as f:
            file_contents = f.read()
        self.assertEqual(output, file_contents, "Saved file content should match returned text.")
